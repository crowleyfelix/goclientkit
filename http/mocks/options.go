// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"

// Options is an autogenerated mock type for the Options type
type Options struct {
	mock.Mock
}

// Headers provides a mock function with given fields:
func (_m *Options) Headers() map[string]string {
	ret := _m.Called()

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	return r0
}

// JSON provides a mock function with given fields:
func (_m *Options) JSON() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Params provides a mock function with given fields:
func (_m *Options) Params() map[string]string {
	ret := _m.Called()

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func() map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	return r0
}

// SetHeaders provides a mock function with given fields: _a0
func (_m *Options) SetHeaders(_a0 map[string]string) {
	_m.Called(_a0)
}

// SetJSON provides a mock function with given fields: _a0
func (_m *Options) SetJSON(_a0 interface{}) {
	_m.Called(_a0)
}

// SetParams provides a mock function with given fields: _a0
func (_m *Options) SetParams(_a0 map[string]string) {
	_m.Called(_a0)
}
